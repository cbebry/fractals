     //Snowflakes     function snowflake(n) {     		 var cos = Math.cos(Math.abs(theta) * deg); 		 var h = .5 * (len / (cos + 1));		 scl = h / len;	 	         ctx.save();        if(n == 0) {           ctx.lineTo(len, 0);        } else {           //to handle recursion           ctx.scale(scl, scl);           snowflake(n - 1);           ctx.rotate(theta * deg);           snowflake(n - 1);           ctx.rotate((-2) * theta * deg);           snowflake(n - 1);           ctx.rotate(theta * deg);           snowflake(n - 1)        }        ctx.restore();        ctx.translate(len, 0);     }	 	 	      //h is derived by first observing that each side becomes segmented into 4 sides     //This is because of our rule... ___ ==> _/\_     //The sum of the 4 segments must equal len, AND the segments are equal in length     //To solve for the hypotenuse, observe that cos(theta) = A/H     //Hcos(theta) = A     //2A + 2*H = len     //2Hcos(theta) + 2H = len ...